use production;
select * , case when not_change_status_longtime = 1 and total_in_locations =0 
and total_Available =1 
and total_Available_af_main = 1
and unknown_ = 0
then 1 else 0 end as Repos_not_done

from (
select 
scooterId, status ,
case 
when 
lat >= 24.3456375663016
and 
lat <= 25.3351316485914
and 
lng >= 46.0426316998935
and 
lng <=47.1549974225497
Then "Riyadh"
when 
lat >= 25.9714874799726
and 
lat <= 26.655912546767
and 
lng >= 49.7199254365956
and 
lng <=50.3955846162831
Then  "Dammam"
else "Others"  End  as city_ 
,
sum(case when  
#status ="Available" 
#or status ='InUse' 
#or 
status ='BatteryLow' 
then 1 else 0 end ) Total_Low_scooters
,stationId,sum(case when (`Vehicles`.`Battery`-31)/(42-31)*100>=1 and (`Vehicles`.`Battery`-31)/(42-31)*100<=30 then 1 else 0 end) as total_low_voltage 
,sum(case when  DATEDIFF(CURRENT_TIMESTAMP,FROM_UNIXTIME((`lastUsed`/1000)))>1 and status<> "Maintenance" then 1 else 0 end) as total_not_used
,count(*) as total_Available , 
sum(case when status="Maintenance" then 1 else 0 end ) as Total_Maintenance, 
count(*) - sum(case when status="Maintenance" then 1 else 0 end ) as total_Available_af_main
,sum(case when status <> "Maintenance" 
and status <> "Available" and status <> "InUse" and status <> "BatteryLow" then 1 else 0 end) as unknown_
, sum(case when 
TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME((`heartBeatTimeUnix`/1000)), CURRENT_TIMESTAMP) 
>300
 then 1 else 0 end ) as No_signal_5hours,
  sum(case when 
TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME((`heartBeatTimeUnix`/1000)), CURRENT_TIMESTAMP) 
>1440
 then 1 else 0 end ) as No_signal_overday
,sum(case when status = 'Stray' then 1 else 0 end) as lost_scooters,
sum(case when status='Ops_PickUp' or status='Redistribute' or status='Charging' then 1 else 0 end) as collected_warehouse
, sum(case when
concat(left(lat,6)," ",left(lng,6)) in ("24.808 46.519",
"24.808 46.519",
"24.808 46.519",
"24.808 46.519",
"24.808 46.518",
"24.808 46.519",
"24.808 46.519",
"24.808 46.519",
"24.808 46.518",
"26.393 50.126",
"26.395 50.127",
"26.397 50.127",
"26.395 50.126",
"26.395 50.126",
"26.396 50.127",
"26.396 50.127",
"26.361 43.746",
"26.362 43.745",
"26.360 43.748",
"26.362 43.747",
"24.083 45.324",
"24.087 45.331",
"24.086 45.329",
"24.789 46.692",
"24.788 46.690",
"24.790 46.691",
"26.363 43.745",
"26.362 43.747",
"24.787 46.647",
"24.787 46.647",
"24.810 46.688",
"24.787 46.647",
"24.787 46.647",
"24.787 46.647",
"24.787 46.647",
"24.420 39.601",
"24.860 46.740",
"24.862 46.741",
"24.863 46.741",
"24.861 46.740",
"24.858 46.741",
"24.862 46.742",
"24.862 46.740",
"24.859 46.740",
"24.860 46.739",
"24.859 46.741",
"24.861 46.739",
"24.863 46.740",
"24.858 46.740",
"24.417 39.601",
"24.417 39.601",
"24.426 39.601",
"24.426 39.600",
"24.426 39.601",
"24.425 39.595",
"24.489 39.580",
"24.489 39.581",
"24.489 39.581",
"24.490 39.581",
"24.478 39.654",
"24.477 39.647",
"24.478 39.651",
"24.477 39.648",
"24.862 46.741",
"24.863 46.741",
"24.860 46.740",
"24.860 46.740",
"24.863 46.741",
"24.863 46.741",
"24.860 46.740",
"24.860 46.740",
"24.862 46.742",
"24.863 46.741",
"24.858 46.741",
"24.860 46.740",
"24.861 46.740",
"26.322 50.019",
"26.322 50.019",
"26.323 50.018",
"24.494 39.689",
"24.495 39.689",
"24.809 46.626",
"24.809 46.626",
"26.456 50.107",
"26.456 50.105",
"26.456 50.107",
"26.456 50.105",
"24.733 46.649",
"24.734 46.648",
"24.734 46.648",
"24.732 46.649",
"24.736 46.720",
"24.737 46.722",
#REF!
"24.872 46.640",
"24.798 46.663",
"24.806 46.681",
"24.805 46.684",
"24.797 46.708",
"24.797 46.708",
"24.781 46.674",
"24.782 46.672",
"24.823 46.619",
"24.824 46.619",
"24.823 46.619",
"24.800 46.605",
"24.697 46.686",
"24.082 45.309",

"24.750 46.686" ,
"24.751 46.686",
"24.750 46.686",
"24.750 46.686",
"24.750 46.686",
"24.755 46.686",
"24.755 46.686",
"24.755 46.687",
"24.754 46.686",
"24.755 46.688",
"24.756 46.689",
"24.755 46.690",
"24.755 46.690",
"24.755 46.690",
"24.755 46.690",
"24.754 46.689",
"24.754 46.689",
"24.755 46.689",
"24.753 46.692",
"24.753 46.693",
"24.753 46.693",
"24.753 46.692",
"24.753 46.684",
"24.753 46.684",
"24.752 46.685",
"24.752 46.684",
"24.750 46.694",
"24.750 46.694",
"24.750 46.694",
"24.750 46.694",
"24.754 46.694",
"24.754 46.695",
"24.754 46.695",
"24.754 46.695",
"24.754 46.694",
"24.757 46.688",
"24.757 46.688",
"24.756 46.688",
"24.756 46.688",
"24.754 46.691",
"24.754 46.691",
"24.754 46.692",
"24.753 46.691",
"24.863 46.739",
"24.863 46.740",
"24.863 46.741",
"24.862 46.741",
"24.861 46.740",
"24.860 46.740",
"24.861 46.739",
"24.860 46.739",
"24.859 46.741",
"24.859 46.740",
"24.859 46.741",
"24.859 46.739",
"24.860 46.740",
"24.861 46.740",
"24.861 46.739",
"24.860 46.739","24.083 45.324",
"24.087 45.331",
"24.086 45.329",
"24.789 46.692",
"24.788 46.690",
"24.790 46.691",
"24.719 46.682",
"24.724 46.681",
"24.728 46.667",
"24.723 46.679",
"24.744 46.756",
"24.746 46.758",
"24.791 46.741",
"24.791 46.742",
"24.791 46.740",
"24.778 46.732",
"24.779 46.731",
"24.782 46.729",
"24.703 46.700",
"24.699 46.690",
"24.700 46.691",
"24.699 46.691",
"24.703 46.699",
"24.7 46.691",
"24.702 46.696",
"24.701 46.697",
"24.773 46.701",
"24.772 46.698",
"24.772 46.699",
"24.772 46.700",
"24.688 46.707",
"24.688 46.704",
"24.689 46.702",
"24.687 46.703",
"24.688 46.702",
"24.773 46.644",
"24.768 46.647",
"24.774 46.644",
"24.771 46.645",
"24.77 46.646",
"24.770 46.646",
"24.788 46.611",
"24.789 46.611",
"24.786 46.612",
"24.79 46.611",
"24.766 46.623",
"24.737 46.722",
"24.736 46.720",
"24.856 46.651",
"24.856 46.65",
"24.732 46.649",
"24.733 46.649",
"24.734 46.648",
"24.687 46.688",
"24.696 46.684",
"24.697 46.686",
"24.686 46.688",
"24.696 46.683",
"24.808 46.519",
"24.808 46.518",
"26.393 50.126",
"26.397 50.127",
"26.395 50.127",
"26.363 43.745",
"26.361 43.746",
"26.361 43.745",
"26.359 43.749",
"26.362 43.747",
"24.420 39.601",
"24.417 39.601",
"24.426 39.600",
"24.489 39.580",
"24.489 39.581",
"24.478 39.654",
"24.860 46.740",
"24.862 46.741",
"24.863 46.741",
"24.861 46.740",
"24.858 46.741",
"24.862 46.742",
"24.862 46.740",
"24.859 46.740",
"24.861 46.739",
"24.860 46.739",
"26.322 50.019",
"24.809 46.626",
"26.456 50.107",
"24.798 46.663",
"24.798 46.665",
"24.854 46.735",
"24.805 46.684",
"24.806 46.683",
"24.806 46.681",
"24.797 46.708",
"24.781 46.674",
"24.782 46.673",
"24.780 46.672",
"24.823 46.619",
"24.825 46.618",
"24.824 46.619") then 1 else 0 end) as total_in_locations
,
sum(case when
concat(left(lat,6)," ",left(lng,6)) in ("24.688 46.707",
"24.688 46.704",
"24.687 46.703",
"24.689 46.702",
"24.688 46.702",
"24.687 46.702",
"24.688 46.708",
"24.688 46.703",
"24.689 46.708",
"24.687 46.705",
"24.687 46.704",
"24.687 46.699",
"24.687 46.707",
"24.691 46.701",
"24.685 46.7",
"24.688 46.709",
"24.686 46.7",
"24.686 46.699",
"24.689 46.709",
"24.691 46.702",
"24.686 46.702",
"24.686 46.701",
"24.686 46.707",
"24.689 46.711",
"24.691 46.707",
"24.692 46.702",
"24.69 46.708",
"24.687 46.708",
"24.687 46.706",
"24.686 46.703",
"24.687 46.701",
"24.69 46.705",
"24.691 46.705",
"24.691 46.708",
"24.692 46.701",
"24.688 46.705",
"24.689 46.71",
"24.688 46.706",
"24.689 46.707",
"24.686 46.706",
"24.685 46.703",
"24.69 46.71",
"24.685 46.699",
"24.687 46.7",
"24.688 46.7",
"24.688 46.711",
"24.689 46.701",
"24.69 46.707",
"24.692 46.704",
"24.69 46.706",
"24.688 46.71",
"24.685 46.702",
"24.685 46.701",
"24.689 46.712",
"24.685 46.704",
"24.69 46.709",
"24.691 46.706",
"24.688 46.701",
"24.688 46.699",
"24.691 46.709",
"24.69 46.7",
"24.684 46.699",
"24.686 46.705",
"24.686 46.704",
"24.689 46.7",
"24.69 46.702",
"24.69 46.704",
"24.691 46.703",
"24.69 46.701",
"24.69 46.711",
"24.685 46.707",
"24.687 46.709",
"24.684 46.698",
"24.684 46.701",
"24.692 46.703",
"24.69 46.703",
"24.691 46.7",
"24.686 46.708",
"24.684 46.7",
"24.691 46.704",
"24.689 46.705",
"24.689 46.703",
"24.684 46.702",
"24.687 46.71",
"24.683 46.7",
"24.685 46.698",
"24.703 46.7",
"24.683 46.699",
"24.689 46.713",
"24.699 46.691",
"24.69 46.712",
"24.689 46.704",
"24.685 46.705",
"24.686 46.698",
"24.693 46.703",
"24.692 46.705",
"24.684 46.703",
"24.685 46.708",
"24.685 46.706",
"24.693 46.701",
"24.691 46.71",
"24.683 46.701",
"24.702 46.698",
"24.694 46.698",
"24.686 46.688",
"24.69 46.713",
"24.703 46.699",
"24.688 46.713",
"24.692 46.706",
"24.688 46.712",
"25.396 55.472",
"24.689 46.699",
"24.699 46.69",
"24.684 46.711",
"24.687 46.711",
"24.689 46.706",
"24.83246.658",

"0 46.702",
"24.684 46.708",
"24.687 46.713",
"24.702 46.697",
"24.691 46.711",
"24.692 46.707",
"24.7 46.704",
"24.693 46.705",
"24.685 46.71",
"24.686 46.71",
"24.701 46.696",
"24.704 46.699",
"24.695 46.704",
"24.681 46.693",
"24.696 46.71",
"24.704 46.701",
"24.685 46.711",
"24.686 46.695",
"24.693 46.704",
"24.697 46.703",
"24.69 46.696",
"24.691 46.714",
"24.688 46.688",
"24.683 46.702",
"25.395 55.472",
"24.694 46.699",
"24.7 46.693",
"24.696 46.703",
"24.702 46.696",
"24.717 46.681",
"24.682 46.7",
"24.702 46.699",
"24.772 46.645",
"25.396 55.471",
"24.684 46.689",
"24.697 46.701",
"24.696 46.702",
"24.683 46.698",
"24.703 46.698",
"24.696 46.684",
"24.691 46.712",
"24.697 46.686",
"24.698 46.689",
"24.7 46.691",
"24.704 46.702",
"24.698 46.688",
"24.701 46.695",
"24.697 46.687",
"24.699 46.689",
"24.7 46.692",
"24.699 46.692",
"24.698 46.69",
"24.698 46.687",
"24.704 46.7",
"24.697 46.685",
"24.704 46.703",
"24.701 46.697",
"24.701 46.694",
"24.696 46.683",
"24.703 46.701",
"24.7 46.694",
"24.698 46.686",
"24.703 46.702",
"24.697 46.684",
"24.695 46.681",
"24.705 46.706",
"24.699 46.688",
"24.696 46.685",
"24.697 46.683",
"24.701 46.692",
"24.705 46.705",
"24.705 46.704",
"24.703 46.697",
"24.696 46.682",
"24.701 46.693",
"24.697 46.688",
"24.695 46.684",
"24.704 46.704",
"24.7 46.695",
"24.703 46.696",
"24.695 46.682",
"24.734 46.648",
"24.705 46.702",
"24.7 46.688",
"24.705 46.703",
"24.695 46.68",
"24.699 46.687",
"24.7 46.69",
"24.702 46.705",
"24.686 46.687",
"24.702 46.695",
"24.687 46.687",
"24.705 46.699",
"24.698 46.691",
"24.696 46.686",
"24.697 46.682",
"24.687 46.688",
"24.693 46.685",
"24.695 46.683",
"24.696 46.687",
"24.699 46.682",
"24.691 46.671",
"24.69 46.688",
"24.705 46.7",
"24.694 46.678",
"24.703 46.705",
"24.694 46.684",
"24.691 46.672",
"24.719 46.679",
"24.694 46.67",
"24.688 46.684",
"24.707 46.707",
"24.702 46.68",
"24.7 46.689",
"24.682 46.69",
"24.685 46.689",
"24.72 46.681",
"24.706 46.699",
"24.695 46.69",
"24.701 46.691",
"24.701 46.69",
"24.691 46.67",
"24.699 46.685",
"24.706 46.688",
"24.692 46.669",
"24.7 46.696",
"24.693 46.686",
"24.704 46.697",
"24.808 46.519",
"24.715 46.673",
"24.706 46.7",
"24.698 46.683",
"24.685 46.688",
"24.694 46.68",
"24.705 46.698",
"24.72 46.68",
"24.699 46.694",
"24.698 46.692",
"24.699 46.697",
"24.693 46.684",
"24.698 46.682",
"24.698 46.679",
"24.704 46.705",
"24.694 46.685",
"24.681 46.69",
"24.693 46.67",
"24.702 46.7",
"24.701 46.698",
"24.706 46.706",
"24.696 46.681",
"24.702 46.702",
"24.692 46.674",
"24.698 46.685",
"24.7 46.681",
"24.708 46.686",
"24.697 46.691",
"24.707 46.69",
"24.706 46.702",
"24.717 46.674",
"24.703 46.703",
"24.697 46.689",
"24.688 46.687",
"24.686 46.689",
"24.683 46.69",
"24.685 46.687",
"24.69 46.686",
"24.681 46.691",
"24.719 46.682",
"24.683 46.689",
"24.692 46.686",
"24.692 46.684",
"24.733 46.649",
"24.709 46.663",
"24.706 46.69",
"24.692 46.693",
"24.704 46.691",
"24.707 46.678",
"24.68 46.69",
"24.692 46.683",
"24.69 46.689",
"24.684 46.687",
"24.692 46.671",
"24.691 46.682",
"24.689 46.688",
"24.682 46.691",
"24.692 46.685",
"24.686 46.686",
"24.714 46.678",
"24.7 46.682",
"24.689 46.687",
"24.701 46.681",
"24.694 46.683",
"24.685 46.686",
"24.73 46.666",
"24.7 46.678",
"24.709 46.677",
"24.77 46.646",
"24.768 46.647",
"24.774 46.644",
"24.773 46.644",
"24.771 46.645",
"24.775 46.643",
"24.769 46.646",
"24.767 46.647",
"24.776 46.643",
"24.766 46.648",
"24.769 46.647",
"24.771 46.646",
"24.77 46.645",
"24.772 46.644",
"24.767 46.648",
"24.776 46.642",
"24.768 46.646",
"24.774 46.643",
"24.766 46.647",
"24.773 46.645",
"24.775 46.644",
"24.77 46.647",
"24.765 46.648",
"24.775 46.642",
"24.764 46.649",
"24.772 46.646",
"24.773 46.646",
"24.77 46.643",
"24.77 46.642",
"24.771 46.644",
"24.771 46.643",
"24.774 46.645",
"24.776 46.641",
"24.769 46.648",
"24.774 46.646",
"24.764 46.648",
"24.777 46.642",
"24.774 46.647",
"24.777 46.643",
"24.772 46.643",
"24.772 46.647",
"24.774 46.642",
"24.763 46.649",
"24.769 46.644",
"24.777 46.641",
"24.773 46.647",
"24.773 46.643",
"24.768 46.648",
"24.766 46.646",
"24.777 46.64",
"24.767 46.646",
"24.773 46.655",
"24.766 46.645",
"24.775 46.641",
"24.77 46.649",
"24.778 46.642",
"24.776 46.64",
"24.769 46.653",
"24.769 46.645",
"24.764 46.646",
"24.769 46.643",
"24.765 46.644",
"24.773 46.654",
"24.769 46.642",
"24.771 46.647",
"24.767 46.65",
"24.765 46.643",
"24.774 46.64",
"24.776 46.644",
"24.767 46.645",
"24.763 46.648",
"24.773 46.648",
"24.763 46.65",
"24.773 46.642",
"24.794 46.632",
"24.774 46.641",
"24.766 46.649",
"26.393 50.126",
"26.395 50.127",
"26.397 50.127",
"26.396 50.127",
"26.395 50.126",
"26.398 50.127",
"26.392 50.126",
"26.394 50.126",
"26.39 50.126",
"26.393 50.123",
"26.391 50.126",
"26.394 50.125",
"26.394 50.127",
"26.389 50.126",
"26.396 50.126",
"26.397 50.126",
"26.394 50.124",
"26.393 50.127",
"26.388 50.126",
"26.392 50.124",
"26.392 50.125",
"26.393 50.125",
"26.396 50.125",
"26.395 50.125",
"26.391 50.125",
"26.388 50.12",
"26.388 50.122",
"26.393 50.124",
"26.398 50.126",
"26.389 50.127",
"26.392 50.127",
"26.391 50.124",
"26.386 50.126",
"26.391 50.123",
"26.392 50.123",
"26.387 50.122",
"26.39 50.123",
"26.391 50.127",
"26.388 50.121",
"26.394 50.128",
"26.395 50.124",
"26.389 50.121",
"26.392 50.122",
"26.397 50.129",
"26.399 50.127",
"26.397 50.13",
"26.388 50.119",
"26.391 50.122",
"26.39 50.127",
"26.392 50.12",
"26.396 50.124",
"26.389 50.125",
"26.395 50.123",
"26.389 50.123",
"26.39 50.124",
"26.396 50.129",
"26.397 50.125",
"26.393 50.128",
"26.397 50.128",
"26.392 50.13",
"26.389 50.124",
"26.396 50.128",
"26.398 50.128",
"26.395 50.128",
"26.399 50.128",
"26.392 50.119",
"26.394 50.123",
"26.393 50.13",
"26.39 50.125",
"26.389 50.122",
"26.395 50.129",
"26.395 50.122",
"26.389 50.12",
"26.391 50.121",
"26.39 50.13",
"26.397 50.124",
"26.39 50.122",
"26.39 50.121",
"26.393 50.129",
"26.388 50.123",
"26.398 50.124",
"24.719 46.682",
"24.724 46.681",
"24.723 46.679",
"24.728 46.667",
"24.722 46.672",
"24.726 46.680",
"24.732 46.676",
"24.744 46.756",
"24.746 46.758",
"24.744 46.755",
"24.747 46.761",
"24.791 46.741",
"24.791 46.740",
"24.791 46.742",
"24.735 46.695",
"24.733 46.699",
"24.778 46.732",
"24.779 46.731",
"24.782 46.729",
"24.784 46.728",
"24.780 46.730",
"24.703 46.700",
"24.699 46.690",
"24.699 46.691",
"24.700 46.691",
"24.703 46.699",
"24.7 46.691",
"24.702 46.696",
"24.698 46.690",
"24.701 46.697",
"24.702 46.697",
"24.701 46.696",
"24.698 46.69",
"24.698 46.689",
"24.704 46.702",
"24.700 46.692",
"24.687 46.688",
"24.697 46.687",
"24.702 46.698",
"24.699 46.692",
"24.699 46.69",
"24.686 46.688",
"24.699 46.689",
"24.773 46.701",
"24.772 46.698",
"24.772 46.699",
"24.772 46.700",
"24.773 46.700",
"24.688 46.707",
"24.688 46.704",
"24.689 46.702",
"24.687 46.703",
"24.688 46.702",
"24.688 46.703",
"24.687 46.705",
"24.687 46.702",
"24.687 46.699",
"24.688 46.709",
"24.692 46.702",
"24.691 46.705",
"24.688 46.706",
"24.689 46.708",
"24.685 46.700",
"24.773 46.644",
"24.768 46.647",
"24.774 46.644",
"24.771 46.645",
"24.77 46.646",
"24.770 46.646",
"24.772 46.645",
"24.769 46.646",
"24.770 46.645",
"24.767 46.647",
"24.772 46.644",
"24.775 46.643",
"24.768 46.646",
"24.766 46.648",
"24.776 46.643",
"24.788 46.611",
"24.789 46.611",
"24.786 46.612",
"24.79 46.611",
"24.766 46.623",
"24.790 46.610",
"24.759 46.626",
"24.769 46.618",
"24.763 46.624",
"24.791 46.610",
"24.766 46.622",
"24.768 46.617",
"24.768 46.622",
"24.787 46.612",
"24.814 46.598",
"24.788 46.612",
"24.767 46.622",
"24.807 46.601",
"24.815 46.597",
"24.767 46.628",
"24.760 46.626",
"24.768 46.618",
"24.790 46.611",
"24.791 46.609",
"24.793 46.609",
"26.39 50.129",
"26.396 50.122",
"26.399 50.126",

"26.39 50.128",
"26.392 50.121",
"26.389 50.129",
"26.391 50.119",
"26.398 50.125",
"26.388 50.124",
"26.392 50.129",
"26.394 50.129",
"26.388 50.127",
"26.399 50.125",
"26.397 50.123",
"24.083 45.324",
"24.087 45.331",
"24.086 45.329",
"24.789 46.692",
"24.788 46.690",
"24.790 46.691",
"26.393 50.122",
"26.394 50.121",
"26.395 50.121",
"26.384 50.125",
"26.393 50.121",
"26.396 50.123",
"26.392 50.118",
"26.394 50.122",
"26.387 50.121",
"26.391 50.13",
"26.398 50.129",
"26.392 50.128",
"26.391 50.12",
"26.387 50.126",
"26.385 50.126",
"26.398 50.123",
"26.401 50.127",
"26.397 50.122",
"26.399 50.123",
"26.389 50.128",
"26.391 50.128",
"26.393 50.12",
"26.387 50.119",
"26.398 50.13",
"26.387 50.127",
"26.387 50.124",
"26.392 50.117",
"26.388 50.129",
"26.4 50.127",
"26.313 50.185",
"26.393 50.119",
"26.401 50.126",
"26.391 50.129",
"26.393 50.131",
"26.39 50.12",
"26.399 50.129",
"26.399 50.122",
"26.317 50.224",
"26.386 50.124",
"26.387 50.123",
"26.389 50.119",
"26.402 50.128",
"26.394 50.119",
"26.398 50.132",
"26.398 50.122",
"26.388 50.125",
"26.411 50.129",
"26.4 50.128",
"26.397 50.131",
"26.392 50.132",
"26.387 50.125",
"26.401 50.128",
"26.403 50.131",
"26.384 50.127",
"26.403 50.115",
"26.385 50.122",
"26.401 50.125",
"26.402 50.131",
"26.388 50.13",
"26.398 50.116",
"26.387 50.13",
"26.406 50.127",
"26.383 50.126",
"26.309 50.212",
"26.393 50.118",
"26.396 50.12",
"26.382 50.126",
"26.386 50.122",
"26.385 50.121",
"26.395 50.13" ) then 1 else 0 end ) as stay_station
, sum(case when 
TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME((`lastStatusChange`/1000)), CURRENT_TIMESTAMP) 
>400 and status ='BatteryLow'  
 then 1 else 0 end ) as lowbattery_10_hours ,
  sum(case when 
TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME((`lastStatusChange`/1000)), CURRENT_TIMESTAMP) 
>1000 and status ='BatteryLow' 
 then 1 else 0 end ) as lowbattery_24_hours
 
 ,  case when    ( ( lat>=24.76313629  and   lat<=24.77728128)  and (lng>=46.64119545  and  lng<=46.64969269))
  or ( ( lat>=26.38338283  and   lat<=26.40314203)  and (lng>=50.11938039  and  lng<=50.13349954))
  or ( ( lat>=24.80727232  and   lat<=24.81024262)  and (lng>=46.51755413  and  lng<=46.52010759))
  or ( ( lat>=24.68375215  and   lat<=24.6929349)  and (lng>=46.69877319  and  lng<=46.71428709))
  or ( ( lat>=26.31821419  and   lat<=26.32717665)  and (lng>=50.01373743  and  lng<=50.0245521))
  or ( ( lat>=24.85788659  and   lat<=24.8647592)  and (lng>=46.73602053  and  lng<=46.74430319))
  or ( ( lat>=21.51803506  and   lat<=21.52781617)  and (lng>=39.14782807  and  lng<=39.1593723))
  or ( ( lat>=24.84882651  and   lat<=24.85813336)  and (lng>=46.73344734  and  lng<=46.73739556))
  or ( ( lat>=24.75046299  and   lat<=24.75100618)  and (lng>=46.68611406  and  lng<=46.68669208))
  or ( ( lat>=24.75492796  and   lat<=24.7553262)  and (lng>=46.68662068  and  lng<=46.68707934))
  or ( ( lat>=24.75483745  and   lat<=24.75612717)  and (lng>=46.68890111  and  lng<=46.69044137))
  or ( ( lat>=24.75321755  and   lat<=24.75375829)  and (lng>=46.69271608  and  lng<=46.69342955))
  or ( ( lat>=24.75272646  and   lat<=24.75320874)  and (lng>=46.68453526  and  lng<=46.68509585))
  or ( ( lat>=24.7500501  and   lat<=24.75032657)  and (lng>=46.69411307  and  lng<=46.69441481))
  or ( ( lat>=24.75408523  and   lat<=24.75441406)  and (lng>=46.69485128  and  lng<=46.69528513))
  or ( ( lat>=24.75674268  and   lat<=24.75726514)  and (lng>=46.68829604  and  lng<=46.6888888))
  or ( ( lat>=24.75369346  and   lat<=24.75440591)  and (lng>=46.69142995  and  lng<=46.6922373))
  or ( ( lat>=24.69462946  and   lat<=24.70624812)  and (lng>=46.68022712  and  lng<=46.70670589))
  or ( ( lat>=24.804932  and   lat<=24.81014226)  and (lng>=46.71454798  and  lng<=46.71962272))   
 then 1 else 0 end  as out_of_zones
 ,sum(case when 
TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME((`lastStatusChange`/1000)), CURRENT_TIMESTAMP) 
>600
 then 1 else 0 end ) as not_change_status_longtime
from `Vehicles`
where 
scooterId <2000

#and DATEDIFF(FROM_UNIXTIME((`heartBeatTimeUnix`/1000)),CURRENT_TIMESTAMP) <=1
and
scooterId in (557,10204,
10697,
10913,
11064,
11483,
775,
608,
706,
903,
693,
938,
623,
111,
873,
980,
177,
770,
603,
131,
947,
881,
752,
916,
501,
872,
441,
330,
570,
306,
800,858,
674,
246,
11341,

923,
962,
657,
867,
314,
711,
179,
346,
497,
300,
390,
849,
607,
738,
554,
771,
765,
145,
535,
675,
517,
952,
101,
334,
887,
10885,
11351,
10188,
10162,
10453,
10339,
10517,
10886,
10138,
10245,
10094,
10629,
10098,
10518,
10409,
10881,
10400,
10328,
10356,
10253,
10476,
10515,
10594,
10325,
10298,
10285,
10271,
10153,
10256,
10305,
10025,
10177,
10471,
10516,
10237,
10133,
10235,
10129,
10135,
10028,
10284,
10215,
10888,
10622,
10976,
10873,
10958,
10626,
10324,
10234,
10495,
10526,
10742,
10946,
10334,
10607,
10048,
10254,
10126,
10216,
10046,
10091,
10080,
10286,
10273,
10247,
10300,
10236,
10217,
10277,
10206,
10125,
10232,
10124,
10210,
10093,
10146,
10110,
431,
10564,
10257,
10431,
10068,
10437,
10156,
10370,
10227,
10321,
10332,
10249,
10187,
10382,
10487,
10555,
10381,
10320,
10749,
10743,
10999,
10944,
10745,
495,
180,
616,
486,
882,
492,
386,
804,
266,
618,
647,
829,
661,
760,
638,
734,
442,
786,
228,
154,
355,
283,
688,
481,
860,
480,
696,
100,
678,
685,
614,
190,
50,
205,
868,
155,
739,
520,
599,
172,
732,
138,
816,
478,
143,
406,
979,
611,
398,
132,
10713,
10724,
11492,
10417,
11216,
11040,
11463,
11381,
11006,
11134,
11493,
10464,
11019,
10932,
10707,
11017,
10758,
11226,
10671,
10679,
11023,
11451,
11296,
10077,
11049,
10331,
10686,
10901,
10766,
10900,
11391,
11465,
10817,
10937,
11294,
10987,
11482,
11378,
10868,
10205,
11247,
10760,
11392,
10920,
10761,
10149,
10898,
11165,
10796,
11422,
709,
235,
296,
700,
316,
899,
667,
378,
331,
357,
64,
730,
811,
428,
825,
484,
150,
629,
692,
242,
731,
848,
255,
591,
57,
140,
49,
272,
414,
482,
388,
74,
69,
549,
971,
741,
416,
915,
439,
139,
878,
409,
854,
834,
583,
502,
130,
565,
413,
551,
729,
813,
188,
268,
410,
311,
112,
89,
195,
225,
898,
221,
894,
345,
842,
990,
163,
525,
351,
367,
818,
343,
46,
940,
682,
321,
459,
932,
81,
819,
425,
703,
335,
19,
232,
505,
217,
36,
387,
284,
264,
369,
230,
98,
197,
185,
974,
193,
489,
379,
156,
960,
345,
745,
90,
277,
954,
33,
22,
905,
941,
547,
18,
946,
80,
977,
344,
231,
44,
363,
777,
372,
376,
690,
60,
581,
63,
519,
34,
571,
392,
449,

644,
679,
514,
329,
728,
347,
303,
539,
921,
374,
426,
637,
619,
795,
71,
256,
474,
493,
290,
889,
597,
906,
815,
626,
792,
757,
206,
509,
17,
560,
420,
996,
244,
364,
200,
454,
521,
943,
789,
841,
844,
35,
161,
354,
621,
88,
253,
108,
352,
595,
199,
487,
892,
339,
949,
763,
704,
624,
927,
362,
123,
653,
295,
397,
969,
824,
176,
524,
794,
540,
911,
988,
659,
183,
862,
942,
749,
504,
924,
308,
775,
6,
766,
764,
889,
802,
820,
286,
988,
116,
207,

719,
503,
893,
249,
931,
884,
707,
276,
494,
120,
219,
407,
160,
305,
83,
62,
436,
332,
451,
58,
801,
918,
627,
279,
73,
997,
664,
417,
640,
855,
285,
171,
561,
548,
52,
981,
59,
803,
274,
38,
56,
917,
959,
269,
252,
95,
424,
433,
259,
1,
531,
568,
686,
467,
827,
806,
702,
559,
869,
393,
170,
671,
365,
723,10723,
727,
587,
832,
822,
988,
411,
639,
790,
77,
368,
251,
900,
808,
421,
758,
418,
761,
75,
208,
625,
239,
437,
404,
823,
598,
769,
515,
880,
542,
748,
356,
85,
472,
713,
633,
12,
213,
847,
373,
153,
10030,
10070,
10081,
10346,
10415,
10484,
10584,
10587,
10635,
10680,
10708,
10714,
10759,
10763,
10770,
10782,
10793,
10814,
10821,
10849,
10934,
10948,
10983,
11010,
11036,
11039,
11041,
11043,
11050,
11053,
11065,
11067,
11068,
11098,
11142,
11150,
11158,
11182,
11183,
11187,
11191,
11207,
11209,
11232,
11239,
11249,
11254,
11256,
11260,
11276,
11300,
11301,
11307,
11310,
11312,
11319,
11323,
11329,
11331,
11334,
11341,
11350,
11355,
11365,
11405,
11411,
11412,
11420,
11421,
11426,
11429,
11430,
11437,
11437,
11456,
11481,
11497,431
,105
,707,
305,
954,
123,
679,
279,
598,
664,
62,90,
440,
839,
470,
391,
555,
539,
296,
163,
894,
748,
46,
935,
600,
202,
265,
280,
31,
717,
799,
966,
477,
13,
576,
485,
414,
973,
271,
14,
689,
375,
191,
438,
136,
300,
681,
173,
622,
673,
782,
901,
964,
306,
925,
788,
550,
211,
490,
41,
84,88,487,231,
44,
363,
777,
372,
376,
690,
60,
581,
63,
519,
34,
571,
392,
449,47,
333,
196,
104,
468,
897,
289,
530,
116,
737,
79,
165,
78,
836,
324,
231,
44,
363,
777,
372,
376,
690,
60,
581,
63,
519,
34,
571,
392,
449,528,
721,
620,
697,
4,
82,
910,
724,
922,
7,
534,
25,
775,
742,
691,
871,
458,
641,
890,
262,
972,
123,
778,
781,
395,
950,
318,
435,
814,
694,
399,
27
) 

and scooterId not like "%old%"
#and stationId like "%Riyadh Warehouse%"
group by stationId,city_
,scooterId ,status
order by total_low_voltage desc ) details


